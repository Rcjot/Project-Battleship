/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./src/style.css":
/*!*************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/style.css ***!
  \*************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `* {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\nbody {\n    min-height: 100vh;\n    max-height: 100vh;\n}\nbutton {\n    cursor: pointer;\n}\ndialog {\n    min-height: 100vh;\n    min-width: 100vw;\n}\n#gameScreen {\n    min-height: inherit;\n    min-width: 100vw;\n    padding: 100px;\n    display: flex;\n    gap: 32px;\n}\n\n#boardContainer {\n    display: flex;\n    gap: 100px;\n}\n#playerBoard,\n#botBoard {\n    display: grid;\n    grid-template-columns: repeat(10, 50px);\n    grid-template-rows: repeat(10, 50px);\n}\n\n#tile {\n    border: 1px solid black;\n    max-height: 50px;\n    max-width: 50px;\n}\n`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://my-webpack-template/./src/style.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack://my-webpack-template/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://my-webpack-template/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./src/style.css":
/*!***********************!*\
  !*** ./src/style.css ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./style.css */ \"./node_modules/css-loader/dist/cjs.js!./src/style.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\noptions.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://my-webpack-template/./src/style.css?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://my-webpack-template/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://my-webpack-template/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://my-webpack-template/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://my-webpack-template/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://my-webpack-template/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://my-webpack-template/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./src/DOM/botGameBoardDOM.js":
/*!************************************!*\
  !*** ./src/DOM/botGameBoardDOM.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   botGameBoard: () => (/* binding */ botGameBoard)\n/* harmony export */ });\nconst Player = __webpack_require__(/*! ../factories/player */ \"./src/factories/player.js\");\n\nconst botGameBoard = function () {\n    const myBot = Player(false);\n    const gameScreen = document.querySelector(\"#gameScreen\");\n    const player2Board = document.createElement(\"div\");\n    const botBoard = document.createElement(\"div\");\n    gameScreen.append(player2Board);\n    player2Board.append(botBoard);\n    player2Board.classList.add(\"player2\");\n    botBoard.setAttribute(\"id\", \"botBoard\");\n    myBot.playerGameboard.printBoard();\n    const divArr = Array(10) //divArr to store all grid and have reference\n        .fill(null)\n        .map(() => Array(10).fill(null));\n\n    function createBoard() {\n        for (let i = 0; i < 10; i++) {\n            for (let j = 0; j < 10; j++) {\n                const grid = document.createElement(\"button\");\n                botBoard.append(grid);\n                divArr[i][j] = grid;\n                grid.setAttribute(\"id\", \"tile\");\n                grid.setAttribute(\"value\", `${i},${j}`);\n                grid.setAttribute(\"style\", \"background-color: skyblue\");\n            }\n        }\n    }\n\n    function addGridEventListeners() {\n        for (let i = 0; i < 10; i++) {\n            for (let j = 0; j < 10; j++) {\n                divArr[i][j].addEventListener(\"click\", () => {\n                    if (myBot.playerGameboard.recieveAttack([j, i])) {\n                        divArr[i][j].textContent = \"hit\";\n                        divArr[i][j].disabled = true;\n                    } else {\n                        divArr[i][j].textContent = \"nohit\";\n                        divArr[i][j].disabled = true;\n                    }\n                    const event = new Event(\"clickedBotTile\");\n                    document.dispatchEvent(event);\n                });\n            }\n        }\n    }\n\n    function renderBoard() {\n        for (let i = 0; i < 10; i++) {\n            for (let j = 0; j < 10; j++) {\n                divArr[j][i].setAttribute(\"style\", \"background-color: skyblue\");\n\n                if (myBot.playerGameboard.board[j][i] === \"x\") {\n                    divArr[j][i].textContent = \"hit\";\n                    divArr[j][i].setAttribute(\n                        \"style\",\n                        \"background-color: darkgoldenrod\"\n                    );\n                    if (myBot.playerGameboard.coordsArr[j][i].isSunk()) {\n                        divArr[j][i].setAttribute(\n                            \"style\",\n                            \"background-color: red\"\n                        );\n                    }\n                } else if (myBot.playerGameboard.board[j][i] === \"o\") {\n                    divArr[j][i].textContent = \"nohit\";\n                    divArr[j][i].setAttribute(\n                        \"style\",\n                        \"background-color: blue\"\n                    );\n                }\n            }\n        }\n    }\n\n    function disableButtons() {\n        for (let i = 0; i < 10; i++) {\n            for (let j = 0; j < 10; j++) {\n                divArr[i][j].disabled = true;\n            }\n        }\n    }\n\n    function init() {\n        createBoard();\n        addGridEventListeners();\n    }\n\n    function checkAllShipsSunk() {\n        return myBot.playerGameboard.checkAllShipsSunk();\n    }\n\n    return {\n        init,\n        checkAllShipsSunk,\n        disableButtons,\n        renderBoard,\n    };\n};\n\n\n//# sourceURL=webpack://my-webpack-template/./src/DOM/botGameBoardDOM.js?");

/***/ }),

/***/ "./src/DOM/gameStateDOM.js":
/*!*********************************!*\
  !*** ./src/DOM/gameStateDOM.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   gameStates: () => (/* binding */ gameStates)\n/* harmony export */ });\n/* harmony import */ var _botGameBoardDOM__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./botGameBoardDOM */ \"./src/DOM/botGameBoardDOM.js\");\n/* harmony import */ var _playerBoard_playerGameBoardDOM__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./playerBoard/playerGameBoardDOM */ \"./src/DOM/playerBoard/playerGameBoardDOM.js\");\n/* harmony import */ var _gameFlow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../gameFlow */ \"./src/gameFlow.js\");\n\n\n\nconst gameStates = (function () {\n    const gameScreen = document.querySelector(\"#gameScreen\");\n    const backBtn = document.createElement(\"button\");\n    let currentState = \"gameStart\";\n\n    backBtn.textContent = \"back\";\n\n    backBtn.addEventListener(\"click\", () => {\n        location.reload();\n    });\n\n    function gameStart() {\n        gameScreen.innerHTML = \"\";\n        const titleDiv = document.createElement(\"div\");\n        titleDiv.textContent = \"Battle Ship\";\n        const vsPlayerBtn = document.createElement(\"button\");\n        const vsBotBtn = document.createElement(\"button\");\n        vsPlayerBtn.textContent = \"vs Player\";\n        vsBotBtn.textContent = \"vs Bot\";\n        gameScreen.append(titleDiv);\n        gameScreen.append(vsPlayerBtn);\n        gameScreen.append(vsBotBtn);\n\n        vsBotBtn.addEventListener(\"click\", () => {\n            vsBotGame();\n        });\n        vsPlayerBtn.addEventListener(\"click\", () => {\n            vsPlayerGame();\n        });\n    }\n\n    function vsBotGame() {\n        currentState = \"vsBotGame\";\n        gameScreen.innerHTML = \"\";\n        gameScreen.append(backBtn);\n\n        const myPlayer = (0,_playerBoard_playerGameBoardDOM__WEBPACK_IMPORTED_MODULE_1__.playerGameBoard)();\n        const myBot = (0,_botGameBoardDOM__WEBPACK_IMPORTED_MODULE_0__.botGameBoard)();\n        myPlayer.beforeGame.init();\n        let previousAttack = null;\n        let smartBotAttack = false;\n        const toAttackStack = [];\n        document.addEventListener(\"createBotBoard\", () => {\n            if (currentState != \"vsBotGame\") return;\n\n            myPlayer.beforeGame.nextPhase();\n            myBot.init();\n        });\n        function doRandomAttack() {\n            let randx = Math.floor(Math.random() * 10);\n            let randy = Math.floor(Math.random() * 10);\n            while (!myPlayer.recieveAttack(randx, randy)) {\n                console.log(\"HEY\");\n                randx = Math.floor(Math.random() * 10);\n                randy = Math.floor(Math.random() * 10);\n                console.log(randx, randy);\n            }\n            previousAttack = [randx, randy];\n            if (myPlayer.checkCoordIfHit(previousAttack)) {\n                console.log(\"hit!!!!!!!!!\");\n                console.log(\"smartbotattack  is going to activate!\");\n                smartBotAttack = true;\n                const posAttacksArr = [\n                    [randx - 1, randy, 0],\n                    [randx + 1, randy, 1],\n                    [randx, randy - 1, 2],\n                    [randx, randy + 1, 3],\n                ];\n\n                for (let a of posAttacksArr) {\n                    toAttackStack.push(a);\n                }\n            }\n        }\n\n        document.addEventListener(\"clickedBotTile\", () => {\n            if (currentState != \"vsBotGame\") return;\n            myBot.renderBoard();\n            if (myBot.checkAllShipsSunk() || myPlayer.checkAllShipsSunk()) {\n                const event = new Event(\"gameOver\");\n                document.dispatchEvent(event);\n            } else {\n                if (!smartBotAttack) {\n                    console.log(\"did random because not smartbot\");\n                    doRandomAttack();\n                } else {\n                    if (toAttackStack.length === 0) {\n                        smartBotAttack = false;\n                        doRandomAttack();\n                        console.log(\"did random because stack is empty\");\n                        return;\n                    }\n                    let AttackDq = toAttackStack.pop();\n                    let [x, y] = AttackDq;\n                    let recievedYes = myPlayer.recieveAttack(x, y);\n                    while (!recievedYes && toAttackStack.length != 0) {\n                        AttackDq = toAttackStack.pop();\n                        [x, y] = AttackDq;\n                        recievedYes = myPlayer.recieveAttack(x, y);\n                    }\n\n                    if (!recievedYes) {\n                        console.log(\"did random because not yes\");\n                        smartBotAttack = false;\n                        doRandomAttack();\n                    } else {\n                        previousAttack = [x, y];\n                        console.log(AttackDq);\n                        if (myPlayer.checkCoordIfHit(previousAttack)) {\n                            switch (AttackDq[2]) {\n                                case 0:\n                                    toAttackStack.push([\n                                        AttackDq[0] - 1,\n                                        AttackDq[1],\n                                        0,\n                                    ]);\n                                    break;\n                                case 1:\n                                    toAttackStack.push([\n                                        AttackDq[0] + 1,\n                                        AttackDq[1],\n                                        1,\n                                    ]);\n                                    break;\n                                case 2:\n                                    toAttackStack.push([\n                                        AttackDq[0],\n                                        AttackDq[1] - 1,\n                                        2,\n                                    ]);\n                                    break;\n                                case 3:\n                                    toAttackStack.push([\n                                        AttackDq[0],\n                                        AttackDq[1] + 1,\n                                        3,\n                                    ]);\n                                    break;\n                            }\n                        }\n                    }\n                }\n                if (myBot.checkAllShipsSunk() || myPlayer.checkAllShipsSunk()) {\n                    const event = new Event(\"gameOver\");\n                    document.dispatchEvent(event);\n                }\n                // put smart bot algo here\n            }\n        });\n\n        document.addEventListener(\"gameOver\", () => {\n            if (currentState != \"vsBotGame\") return;\n\n            myBot.disableButtons();\n        });\n\n        // while (gameFlow.getBoardComplete) {}\n    }\n\n    function vsPlayerGame() {\n        gameScreen.innerHTML = \"\";\n        currentState = \"vsPlayerGame\";\n        gameScreen.append(backBtn);\n\n        const myDialog = document.querySelector(\"dialog\");\n        const closeBtn = document.querySelector(\"dialog button\");\n        closeBtn.addEventListener(\"click\", () => {\n            myDialog.close();\n        });\n        const navBar = document.createElement(\"div\");\n        let gameBoardFinishedCnt = 0;\n        const myPlayer = (0,_playerBoard_playerGameBoardDOM__WEBPACK_IMPORTED_MODULE_1__.playerGameBoard)();\n        const myPlayer2 = (0,_playerBoard_playerGameBoardDOM__WEBPACK_IMPORTED_MODULE_1__.playerGameBoard)(true);\n        let player1Turn = true;\n        myPlayer.beforeGame.init();\n        gameScreen.append(navBar);\n\n        document.addEventListener(\"createBotBoard\", () => {\n            if (currentState != \"vsPlayerGame\") return;\n\n            gameBoardFinishedCnt++;\n            if (gameBoardFinishedCnt === 2) {\n                console.log(\"finished two? should go next phase\");\n                myPlayer.beforeGame.nextPhase(true);\n                myPlayer2.beforeGame.nextPhase(true);\n                myDialog.showModal();\n            } else {\n                myPlayer.beforeGame.hideBoard();\n                myPlayer2.beforeGame.init();\n            }\n        });\n\n        document.addEventListener(\"nextTurn\", () => {\n            if (currentState != \"vsPlayerGame\") return;\n\n            if (myPlayer.checkAllShipsSunk() || myPlayer2.checkAllShipsSunk()) {\n                const event = new Event(\"gameOver\");\n                document.dispatchEvent(event);\n                return;\n            }\n            if (player1Turn) {\n                //player1 clicked so player2s turn now!\n                myPlayer2.duringGameVSPlayer.disableBtns();\n                myPlayer2.duringGameVSPlayer.hideBoard();\n                createToNextPlayerBtn(player1Turn);\n            } else {\n                myPlayer.duringGameVSPlayer.disableBtns();\n                myPlayer.duringGameVSPlayer.hideBoard();\n                createToNextPlayerBtn(player1Turn);\n            }\n        });\n\n        function createToNextPlayerBtn(p1) {\n            console.log(\"here\");\n            const toNextBtn = document.createElement(\"button\");\n            navBar.append(toNextBtn);\n            toNextBtn.textContent = \"next\";\n            toNextBtn.addEventListener(\"click\", () => {\n                if (p1) {\n                    myPlayer.duringGameVSPlayer.hideBoard();\n                    myPlayer2.duringGameVSPlayer.renderBoard();\n                    myPlayer.duringGameVSPlayer.enableBtns();\n                    myDialog.showModal();\n                    player1Turn = false;\n                } else {\n                    myPlayer2.duringGameVSPlayer.hideBoard();\n                    myPlayer.duringGameVSPlayer.renderBoard();\n                    myPlayer2.duringGameVSPlayer.enableBtns();\n                    myDialog.showModal();\n                    player1Turn = true;\n                }\n                navBar.innerHTML = \"\";\n            });\n        }\n\n        document.addEventListener(\"gameOver\", () => {\n            if (currentState != \"vsPlayerGame\") return;\n            console.log(\"gameover?\");\n            myPlayer.duringGameVSPlayer.renderBoard();\n            myPlayer2.duringGameVSPlayer.renderBoard();\n            myPlayer.duringGameVSPlayer.disableBtns();\n            myPlayer2.duringGameVSPlayer.disableBtns();\n        });\n    }\n\n    function gameEnd() {}\n\n    return {\n        gameStart,\n        vsBotGame,\n        vsPlayerGame,\n        gameEnd,\n    };\n})();\n\n\n//# sourceURL=webpack://my-webpack-template/./src/DOM/gameStateDOM.js?");

/***/ }),

/***/ "./src/DOM/playerBoard/gridEventListeners.js":
/*!***************************************************!*\
  !*** ./src/DOM/playerBoard/gridEventListeners.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   gridEventListeners: () => (/* binding */ gridEventListeners)\n/* harmony export */ });\nconst gridEventListeners = function (myPlayer) {\n    function addAllEvents(divArr, i, j, checkBoxes) {\n        divArr[i][j].addEventListener(\"mouseover\", () => {\n            divArr = divArr;\n            checkBoxes = checkBoxes;\n            if (checkBoxes[0].checked === true) {\n                mouseOverEvent(i, j, 0, divArr);\n            } else if (checkBoxes[1].checked === true) {\n                mouseOverEvent(i, j, 1, divArr);\n            } else if (checkBoxes[2].checked === true) {\n                mouseOverEvent(i, j, 2, divArr);\n            } else if (checkBoxes[3].checked === true) {\n                mouseOverEvent(i, j, 3, divArr);\n            } else if (checkBoxes[4].checked === true) {\n                mouseOverEvent(i, j, 4, divArr);\n            } else {\n            }\n        });\n        divArr[i][j].addEventListener(\"mouseleave\", () => {\n            if (checkBoxes[0].checked === true) {\n                mouseLeaveEvent(i, j, 0, divArr);\n            } else if (checkBoxes[1].checked === true) {\n                mouseLeaveEvent(i, j, 1, divArr);\n            } else if (checkBoxes[2].checked === true) {\n                mouseLeaveEvent(i, j, 2, divArr);\n            } else if (checkBoxes[3].checked === true) {\n                mouseLeaveEvent(i, j, 3, divArr);\n            } else if (checkBoxes[4].checked === true) {\n                mouseLeaveEvent(i, j, 4, divArr);\n            } else {\n            }\n            // console.log(hoveredCell);\n        });\n        divArr[i][j].addEventListener(\"click\", () => {\n            console.log([i, j]);\n            if (checkBoxes[0].checked === true) {\n                mouseClickEvent(i, j, 0, divArr, checkBoxes);\n            } else if (checkBoxes[1].checked === true) {\n                mouseClickEvent(i, j, 1, divArr, checkBoxes);\n            } else if (checkBoxes[2].checked === true) {\n                mouseClickEvent(i, j, 2, divArr, checkBoxes);\n            } else if (checkBoxes[3].checked === true) {\n                mouseClickEvent(i, j, 3, divArr, checkBoxes);\n            } else if (checkBoxes[4].checked === true) {\n                mouseClickEvent(i, j, 4, divArr, checkBoxes);\n            } else {\n            }\n            const event = new Event(\"checkShips\");\n            document.dispatchEvent(event);\n        });\n    }\n\n    function mouseOverEvent(i, j, ship, divArr) {\n        // console.log(\"mouseOverEvent\");\n        const validObj = myPlayer.playerGameboard.checkValid(\n            myPlayer.playerGameboard.shipArr[ship],\n            [j, i]\n        );\n\n        if (validObj.validity) {\n            // console.log(validObj.coveredCoordsArr);\n            for (let coords of validObj.coveredCoordsArr) {\n                divArr[coords[1]][coords[0]].setAttribute(\n                    \"style\",\n                    \"background-color: green\"\n                );\n            }\n        } else {\n            for (let coords of validObj.coveredCoordsArr) {\n                divArr[coords[1]][coords[0]].setAttribute(\n                    \"style\",\n                    \"background-color: red\"\n                );\n            }\n        }\n        updateRenderBoard(divArr);\n    }\n\n    function mouseLeaveEvent(i, j, ship, divArr) {\n        const validObj = myPlayer.playerGameboard.checkValid(\n            myPlayer.playerGameboard.shipArr[ship],\n            [j, i]\n        );\n\n        if (validObj.validity) {\n            // console.log(validObj.coveredCoordsArr);\n            for (let coords of validObj.coveredCoordsArr) {\n                divArr[coords[1]][coords[0]].setAttribute(\n                    \"style\",\n                    \"background-color: skyblue\"\n                );\n            }\n        } else {\n            for (let coords of validObj.coveredCoordsArr) {\n                divArr[coords[1]][coords[0]].setAttribute(\n                    \"style\",\n                    \"background-color: skyblue\"\n                );\n            }\n        }\n        updateRenderBoard(divArr);\n    }\n\n    function mouseClickEvent(i, j, ship, divArr, checkBoxes) {\n        const validObj = myPlayer.playerGameboard.checkValid(\n            myPlayer.playerGameboard.shipArr[ship],\n            [j, i]\n        );\n\n        if (validObj.validity) {\n            // console.log(validObj.coveredCoordsArr);\n            myPlayer.playerGameboard.placeShip(\n                myPlayer.playerGameboard.shipArr[ship],\n                [j, i]\n            );\n            checkBoxes[ship].checked = false;\n            checkBoxes[ship].disabled = true;\n            for (let coords of validObj.coveredCoordsArr) {\n                divArr[coords[1]][coords[0]].setAttribute(\n                    \"style\",\n                    \"background-color: blue !important\"\n                );\n            }\n            myPlayer.playerGameboard.printBoard();\n        } else {\n        }\n\n        updateRenderBoard(divArr);\n    }\n\n    function updateRenderBoard(divArr) {\n        for (let i = 0; i < 10; i++) {\n            for (let j = 0; j < 10; j++) {\n                let show = myPlayer.playerGameboard.board[j][i];\n                if (show == 1) {\n                    divArr[j][i].removeAttribute(\"style\");\n                    divArr[j][i].setAttribute(\n                        \"style\",\n                        \"background-color: blue !important\"\n                    );\n                }\n            }\n        }\n        // myPlayer.playerGameboard.printBoard();\n    }\n\n    function keyBindRotateShip(checkBoxes) {\n        const rotateButton = document.querySelectorAll(\".rotateBtn\");\n        for (let btn of rotateButton) {\n            btn.addEventListener(\"click\", () => {\n                rotateShip(checkBoxes);\n            });\n        }\n    }\n\n    function rotateShip(checkBoxes) {\n        // console.log(\"ship Rotated\");\n        if (checkBoxes[0].checked === true) {\n            myPlayer.playerGameboard.shipArr[0].rotateShip();\n        } else if (checkBoxes[1].checked === true) {\n            myPlayer.playerGameboard.shipArr[1].rotateShip();\n        } else if (checkBoxes[2].checked === true) {\n            myPlayer.playerGameboard.shipArr[2].rotateShip();\n        } else if (checkBoxes[3].checked === true) {\n            myPlayer.playerGameboard.shipArr[3].rotateShip();\n        } else if (checkBoxes[4].checked === true) {\n            myPlayer.playerGameboard.shipArr[4].rotateShip();\n        }\n    }\n\n    return {\n        addAllEvents,\n        keyBindRotateShip,\n        updateRenderBoard,\n    };\n};\n\n\n//# sourceURL=webpack://my-webpack-template/./src/DOM/playerBoard/gridEventListeners.js?");

/***/ }),

/***/ "./src/DOM/playerBoard/playerGameBoardDOM.js":
/*!***************************************************!*\
  !*** ./src/DOM/playerBoard/playerGameBoardDOM.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   playerGameBoard: () => (/* binding */ playerGameBoard)\n/* harmony export */ });\n/* harmony import */ var _gridEventListeners__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gridEventListeners */ \"./src/DOM/playerBoard/gridEventListeners.js\");\n/* harmony import */ var _gameFlow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../gameFlow */ \"./src/gameFlow.js\");\nconst Player = __webpack_require__(/*! ../../factories/player */ \"./src/factories/player.js\");\n\n\n\nconst playerGameBoard = function (player2Bool = false) {\n    const myPlayer = Player(true);\n\n    const gameScreen = document.querySelector(\"#gameScreen\");\n    const player1Board = document.createElement(\"div\");\n    const boardContainer = document.createElement(\"div\");\n    const playerBoard = document.createElement(\"div\");\n    const shipPanel = document.createElement(\"div\");\n    gameScreen.append(player1Board);\n    player1Board.append(boardContainer);\n    boardContainer.append(shipPanel);\n    boardContainer.append(playerBoard);\n    playerBoard.setAttribute(\"id\", \"playerBoard\");\n\n    const beforeGame = {\n        // checkBoxes: document.querySelectorAll(\n        //     \".shipPanel input[type='checkbox']\"\n        // ),\n        checkBoxes: Array(5)\n            .fill(null)\n            .map((_, i) => {\n                const checkbox = document.createElement(\"input\");\n                checkbox.type = \"checkbox\";\n                checkbox.id = `btn${i + 1}`;\n                checkbox.value = i + 1;\n\n                return checkbox;\n            }),\n        gridEventListeners: (0,_gridEventListeners__WEBPACK_IMPORTED_MODULE_0__.gridEventListeners)(myPlayer),\n        divArr: Array(10) //divArr to store all grid and have reference\n            .fill(null)\n            .map(() => Array(10).fill(null)),\n        initCheckBoxes: function () {\n            const rotateBtn = document.createElement(\"button\");\n            rotateBtn.classList.add(\"rotateBtn\");\n            rotateBtn.textContent = \"R\";\n            for (let checkbox of this.checkBoxes) {\n                // checkBox, only check one\n                checkbox.addEventListener(\"change\", () => {\n                    this.checkBoxes.forEach((item) => {\n                        if (checkbox !== item) item.checked = false;\n                    });\n                });\n                shipPanel.append(checkbox);\n            }\n            shipPanel.append(rotateBtn);\n        },\n        createModifyBoard: function () {\n            for (let i = 0; i < 10; i++) {\n                for (let j = 0; j < 10; j++) {\n                    const grid = document.createElement(\"button\");\n                    playerBoard.append(grid);\n                    this.divArr[i][j] = grid;\n                    grid.setAttribute(\"id\", \"tile\");\n                    grid.setAttribute(\"value\", `${i},${j}`);\n                    grid.setAttribute(\"style\", \"background-color: skyblue\");\n                }\n            }\n        },\n        addGridEventListeners: function () {\n            for (let i = 0; i < 10; i++) {\n                for (let j = 0; j < 10; j++) {\n                    this.gridEventListeners.addAllEvents(\n                        this.divArr,\n                        i,\n                        j,\n                        this.checkBoxes\n                    );\n                }\n            }\n        },\n        checkAllShipsPlaced: function () {\n            for (let i = 0; i < this.checkBoxes.length; i++) {\n                if (this.checkBoxes[i].disabled === false) return false;\n            }\n            return true;\n        },\n        nextPhase: function (bool = false) {\n            // gameFlow.setBoardComplete();\n            if (bool) {\n                duringGameVSPlayer.init();\n            } else {\n                duringGameVSBot.init();\n            }\n        },\n        hideBoard: function () {\n            for (let BtnSubArr of this.divArr) {\n                for (let Btn of BtnSubArr) {\n                    Btn.setAttribute(\"style\", \"background-color: none\");\n                }\n            }\n        },\n        init: function () {\n            console.log(\"createdBoard\");\n            this.initCheckBoxes();\n            this.createModifyBoard();\n            this.addGridEventListeners();\n            this.gridEventListeners.keyBindRotateShip(this.checkBoxes);\n            let botCreated = false;\n            document.addEventListener(\"checkShips\", () => {\n                if (this.checkAllShipsPlaced() && !botCreated) {\n                    console.log(\"all ships placed\");\n                    const event = new Event(\"createBotBoard\");\n                    document.dispatchEvent(event);\n                    botCreated = true;\n                }\n            });\n        },\n    };\n\n    const duringGameVSBot = {\n        divArr: Array(10) //divArr to store all grid and have reference\n            .fill(null)\n            .map(() => Array(10).fill(null)),\n        createBoard: function () {\n            for (let i = 0; i < 10; i++) {\n                for (let j = 0; j < 10; j++) {\n                    const grid = document.createElement(\"button\");\n                    playerBoard.append(grid);\n                    this.divArr[i][j] = grid;\n                    grid.setAttribute(\"id\", \"tile\");\n                    grid.setAttribute(\"value\", `${i},${j}`);\n                }\n            }\n        },\n        renderBoard: function () {\n            for (let i = 0; i < 10; i++) {\n                for (let j = 0; j < 10; j++) {\n                    this.divArr[j][i].setAttribute(\n                        \"style\",\n                        \"background-color: skyblue\"\n                    );\n\n                    if (myPlayer.playerGameboard.board[j][i] === \"x\") {\n                        this.divArr[j][i].textContent = \"hit\";\n                        this.divArr[j][i].setAttribute(\n                            \"style\",\n                            \"background-color: darkgoldenrod\"\n                        );\n                        if (myPlayer.playerGameboard.coordsArr[j][i].isSunk()) {\n                            this.divArr[j][i].setAttribute(\n                                \"style\",\n                                \"background-color: red\"\n                            );\n                        }\n                    } else if (myPlayer.playerGameboard.board[j][i] === \"o\") {\n                        this.divArr[j][i].textContent = \"nohit\";\n                        this.divArr[j][i].setAttribute(\n                            \"style\",\n                            \"background-color: blue\"\n                        );\n                    } else if (myPlayer.playerGameboard.board[j][i] === 1) {\n                        this.divArr[j][i].setAttribute(\n                            \"style\",\n                            \"background-color: olive\"\n                        );\n                    }\n                }\n            }\n        },\n        init: function () {\n            shipPanel.innerHTML = \"\";\n            playerBoard.innerHTML = \"\";\n            this.createBoard();\n            this.renderBoard();\n            document.addEventListener(\"recievedAttack\", () => {\n                this.renderBoard();\n                myPlayer.playerGameboard.printBoard();\n            });\n        },\n    };\n\n    const duringGameVSPlayer = {\n        divArr: Array(10) //divArr to store all grid and have reference\n            .fill(null)\n            .map(() => Array(10).fill(null)),\n        createBoard: function () {\n            for (let i = 0; i < 10; i++) {\n                for (let j = 0; j < 10; j++) {\n                    const grid = document.createElement(\"button\");\n                    playerBoard.append(grid);\n                    this.divArr[i][j] = grid;\n                    grid.setAttribute(\"id\", \"tile\");\n                    grid.setAttribute(\"value\", `${i},${j}`);\n                }\n            }\n        },\n        addGridEventListeners: function () {\n            for (let i = 0; i < 10; i++) {\n                for (let j = 0; j < 10; j++) {\n                    this.divArr[i][j].addEventListener(\"click\", () => {\n                        if (myPlayer.playerGameboard.recieveAttack([j, i])) {\n                            this.divArr[i][j].textContent = \"hit\";\n                        } else {\n                            this.divArr[i][j].textContent = \"nohit\";\n                        }\n                        const event = new Event(\"nextTurn\");\n                        document.dispatchEvent(event);\n                    });\n                }\n            }\n        },\n        renderBoard: function () {\n            for (let i = 0; i < 10; i++) {\n                for (let j = 0; j < 10; j++) {\n                    this.divArr[j][i].setAttribute(\n                        \"style\",\n                        \"background-color: skyblue\"\n                    );\n\n                    if (myPlayer.playerGameboard.board[j][i] === \"x\") {\n                        this.divArr[j][i].textContent = \"hit\";\n                        this.divArr[j][i].setAttribute(\n                            \"style\",\n                            \"background-color: darkgoldenrod\"\n                        );\n                        if (myPlayer.playerGameboard.coordsArr[j][i].isSunk()) {\n                            this.divArr[j][i].setAttribute(\n                                \"style\",\n                                \"background-color: red\"\n                            );\n                        }\n                    } else if (myPlayer.playerGameboard.board[j][i] === \"o\") {\n                        this.divArr[j][i].textContent = \"nohit\";\n                        this.divArr[j][i].setAttribute(\n                            \"style\",\n                            \"background-color: blue\"\n                        );\n                    } else if (myPlayer.playerGameboard.board[j][i] === 1) {\n                        this.divArr[j][i].setAttribute(\n                            \"style\",\n                            \"background-color: olive\"\n                        );\n                    }\n                }\n            }\n        },\n        hideBoard: function () {\n            for (let i = 0; i < 10; i++) {\n                for (let j = 0; j < 10; j++) {\n                    this.divArr[j][i].setAttribute(\n                        \"style\",\n                        \"background-color: skyblue\"\n                    );\n\n                    if (myPlayer.playerGameboard.board[j][i] === \"x\") {\n                        this.divArr[j][i].textContent = \"hit\";\n                        this.divArr[j][i].setAttribute(\n                            \"style\",\n                            \"background-color: darkgoldenrod\"\n                        );\n                        if (myPlayer.playerGameboard.coordsArr[j][i].isSunk()) {\n                            this.divArr[j][i].setAttribute(\n                                \"style\",\n                                \"background-color: red\"\n                            );\n                        }\n                    } else if (myPlayer.playerGameboard.board[j][i] === \"o\") {\n                        this.divArr[j][i].textContent = \"nohit\";\n                        this.divArr[j][i].setAttribute(\n                            \"style\",\n                            \"background-color: blue\"\n                        );\n                    }\n                }\n            }\n        },\n        disableBtns: function () {\n            for (let BtnSubArr of this.divArr) {\n                for (let Btn of BtnSubArr) {\n                    Btn.disabled = true;\n                }\n            }\n        },\n        enableBtns: function () {\n            for (let i = 0; i < 10; i++) {\n                for (let j = 0; j < 10; j++) {\n                    if (\n                        myPlayer.playerGameboard.board[j][i] === \".\" ||\n                        myPlayer.playerGameboard.board[j][i] === 1\n                    ) {\n                        this.divArr[j][i].disabled = false;\n                    }\n                }\n            }\n        },\n        init: function () {\n            shipPanel.innerHTML = \"\";\n            playerBoard.innerHTML = \"\";\n            this.createBoard();\n            if (!player2Bool) {\n                this.disableBtns();\n                this.renderBoard();\n            }\n            this.addGridEventListeners();\n        },\n    };\n\n    function recieveAttack(randx, randy) {\n        // recieve??? wrong spelling\n        if (myPlayer.playerGameboard.checkTile([randx, randy])) {\n            console.log(\"goes here!\");\n            console.log(\n                randx,\n                randy,\n                myPlayer.playerGameboard.checkTile([randx, randy])\n            );\n            myPlayer.playerGameboard.recieveAttack([randx, randy]);\n            const event = new Event(\"recievedAttack\");\n            document.dispatchEvent(event);\n            return true;\n        }\n        return false;\n    }\n\n    function checkAllShipsSunk() {\n        return myPlayer.playerGameboard.checkAllShipsSunk();\n    }\n\n    function checkCoordIfHit(coords) {\n        if (coords[0] < 0 || coords[0] > 9 || coords[1] < 0 || coords[1] > 9)\n            return false;\n\n        if (myPlayer.playerGameboard.board[coords[1]][coords[0]] === \"x\")\n            return true;\n        return false;\n    }\n\n    return {\n        beforeGame,\n        duringGameVSPlayer,\n        duringGameVSBot,\n        recieveAttack,\n        checkAllShipsSunk,\n        checkCoordIfHit,\n    };\n};\n\n\n//# sourceURL=webpack://my-webpack-template/./src/DOM/playerBoard/playerGameBoardDOM.js?");

/***/ }),

/***/ "./src/DOM/playerInitDOM.js":
/*!**********************************!*\
  !*** ./src/DOM/playerInitDOM.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   playerInit: () => (/* binding */ playerInit)\n/* harmony export */ });\n/* harmony import */ var _playerBoard_playerGameBoardDOM__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./playerBoard/playerGameBoardDOM */ \"./src/DOM/playerBoard/playerGameBoardDOM.js\");\n/* harmony import */ var _botGameBoardDOM__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./botGameBoardDOM */ \"./src/DOM/botGameBoardDOM.js\");\n\n\n\nconst playerInit = function (playerBool) {\n    if (!playerBool) {\n        _botGameBoardDOM__WEBPACK_IMPORTED_MODULE_1__.botGameBoard.init();\n        return;\n    }\n\n    _playerBoard_playerGameBoardDOM__WEBPACK_IMPORTED_MODULE_0__.playerGameBoard.init();\n    return;\n};\n\n\n//# sourceURL=webpack://my-webpack-template/./src/DOM/playerInitDOM.js?");

/***/ }),

/***/ "./src/factories/gameboard.js":
/*!************************************!*\
  !*** ./src/factories/gameboard.js ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Ship = __webpack_require__(/*! ./ship */ \"./src/factories/ship.js\");\n\nconst Gameboard = function () {\n    // array of ships\n    const shipArr = [Ship(5), Ship(4), Ship(3), Ship(3), Ship(2)];\n\n    const board = Array(10)\n        .fill(null)\n        .map(() =>\n            Array(10)\n                .fill(null)\n                .map(() => \".\")\n        );\n    const coordsArr = Array(10)\n        .fill(null)\n        .map(() =>\n            Array(10)\n                .fill(null)\n                .map(() => \"\")\n        );\n\n    function placeShip(ship, coords) {\n        const validObj = checkValid(ship, coords);\n        // console.log(validObj);\n        if (validObj.validity) {\n            for (let coords of validObj.coveredCoordsArr) {\n                coordsArr[coords[1]][coords[0]] = ship;\n            }\n            updateBoard();\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    function checkValid(ship, coords) {\n        const xcoords = coords[0];\n        const ycoords = coords[1];\n        const length = ship.getLength();\n        const coveredCoordsArr = [];\n        const bounds = [\n            ycoords + length - 1,\n            xcoords - (length - 1),\n            ycoords - (length - 1),\n            xcoords + length - 1,\n        ];\n        const Valid = {\n            validity: true,\n            coveredCoordsArr: coveredCoordsArr,\n        };\n\n        switch (ship.getPosition()) {\n            case 0: //south\n                for (let i = ycoords; i <= bounds[0]; i++) {\n                    if (checkBounds(i)) {\n                        Valid.coveredCoordsArr.push([xcoords, i]);\n                        if (coordsArr[i][xcoords] !== \"\") {\n                            Valid.validity = false;\n                            return Valid;\n                        }\n                    } else {\n                        Valid.validity = false;\n                        return Valid;\n                    }\n                }\n                return Valid;\n            case 1: //west\n                for (let i = xcoords; i >= bounds[1]; i--) {\n                    if (checkBounds(i)) {\n                        Valid.coveredCoordsArr.push([i, ycoords]);\n                        if (coordsArr[ycoords][i] !== \"\") {\n                            Valid.validity = false;\n                            return Valid;\n                        }\n                    } else {\n                        Valid.validity = false;\n                        return Valid;\n                    }\n                }\n                return Valid;\n            case 2: //north\n                for (let i = ycoords; i >= bounds[2]; i--) {\n                    if (checkBounds(i)) {\n                        Valid.coveredCoordsArr.push([xcoords, i]);\n                        if (coordsArr[i][xcoords] !== \"\") {\n                            Valid.validity = false;\n                            return Valid;\n                        }\n                    } else {\n                        Valid.validity = false;\n                        return Valid;\n                    }\n                }\n                return Valid;\n\n            case 3: //east\n                for (let i = xcoords; i <= bounds[3]; i++) {\n                    // console.log(i);\n                    if (checkBounds(i)) {\n                        Valid.coveredCoordsArr.push([i, ycoords]);\n                        if (coordsArr[ycoords][i] !== \"\") {\n                            Valid.validity = false;\n                            return Valid;\n                        }\n                    } else {\n                        Valid.validity = false;\n                        return Valid;\n                    }\n                }\n                return Valid;\n        }\n    }\n\n    function checkBounds(bounds) {\n        if (bounds >= 0 && bounds <= 9) {\n            return true;\n        }\n    }\n\n    function updateBoard() {\n        for (let i = 0; i < coordsArr.length; i++) {\n            for (let j = 0; j < coordsArr.length; j++) {\n                if (coordsArr[i][j] !== \"\") {\n                    board[i][j] = 1;\n                }\n            }\n        }\n    }\n\n    function printBoard() {\n        let myBoard = \"\";\n        for (let i = 0; i < board.length; i++) {\n            myBoard += board[i].join(\"\") + \"\\n\";\n        }\n\n        console.log(myBoard);\n    }\n\n    function recieveAttack(coords) {\n        const y = coords[0];\n        const x = coords[1];\n        if (board[x][y] === 1) {\n            board[x][y] = \"x\";\n            coordsArr[x][y].hit();\n            return true;\n        } else {\n            board[x][y] = \"o\";\n            return false;\n        }\n    }\n\n    function checkTile(coords) {\n        const y = coords[0];\n        const x = coords[1];\n        if (y < 0 || y > 9 || x < 0 || x > 9) return false;\n        if (board[x][y] === \"o\" || board[x][y] === \"x\") {\n            return false;\n        }\n        return true;\n    }\n\n    function checkAllShipsSunk() {\n        for (let ship of shipArr) {\n            // console.log(ship.isSunk());\n            if (ship.isSunk() === false) return false;\n        }\n        return true;\n    }\n\n    return {\n        placeShip,\n        printBoard,\n        recieveAttack,\n        shipArr,\n        checkAllShipsSunk,\n        checkValid,\n        board,\n        checkTile,\n        coordsArr,\n    };\n};\n\nmodule.exports = Gameboard;\n\n\n//# sourceURL=webpack://my-webpack-template/./src/factories/gameboard.js?");

/***/ }),

/***/ "./src/factories/player.js":
/*!*********************************!*\
  !*** ./src/factories/player.js ***!
  \*********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Gameboard = __webpack_require__(/*! ./gameboard */ \"./src/factories/gameboard.js\");\n\nconst Player = function (real) {\n    const playerGameboard = Gameboard();\n\n    if (!real) {\n        for (let ship of playerGameboard.shipArr) {\n            const randposition = Math.floor(Math.random() * 4);\n            let randxcoord = Math.floor(Math.random() * 10);\n            let randycoord = Math.floor(Math.random() * 10);\n            let coordsArr = [randxcoord, randycoord];\n            for (let i = 0; i < randposition; i++) {\n                ship.rotateShip();\n            }\n            // console.log(randposition);\n            // console.log(coordsArr);\n            // console.log(myGameboard.placeShip(ship, coordsArr));\n            while (playerGameboard.placeShip(ship, coordsArr) === false) {\n                randxcoord = Math.floor(Math.random() * 10);\n                randycoord = Math.floor(Math.random() * 10);\n                coordsArr = [randxcoord, randycoord];\n            }\n        }\n    }\n\n    return { playerGameboard };\n};\n\nmodule.exports = Player;\n\n\n//# sourceURL=webpack://my-webpack-template/./src/factories/player.js?");

/***/ }),

/***/ "./src/factories/ship.js":
/*!*******************************!*\
  !*** ./src/factories/ship.js ***!
  \*******************************/
/***/ ((module) => {

eval("const Ship = function (length) {\n    let hitCount = 0;\n    let position = 0;\n\n    function hit() {\n        hitCount++;\n    }\n\n    function isSunk() {\n        if (hitCount >= length) return true;\n        return false;\n    }\n\n    function rotateShip() {\n        if (position === 3) {\n            position = 0;\n        } else {\n            position++;\n        }\n    }\n\n    function getHitCount() {\n        return hitCount;\n    }\n\n    function getPosition() {\n        return position;\n    }\n\n    function getLength() {\n        return length;\n    }\n\n    return {\n        hitCount,\n        hit,\n        isSunk,\n        rotateShip,\n        getHitCount,\n        getPosition,\n        getLength,\n    };\n};\n\nmodule.exports = Ship;\n\n\n//# sourceURL=webpack://my-webpack-template/./src/factories/ship.js?");

/***/ }),

/***/ "./src/gameFlow.js":
/*!*************************!*\
  !*** ./src/gameFlow.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   gameFlow: () => (/* binding */ gameFlow)\n/* harmony export */ });\n/* harmony import */ var _DOM_playerInitDOM__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DOM/playerInitDOM */ \"./src/DOM/playerInitDOM.js\");\n\n\nconst gameFlow = (function () {\n    let playerCreatingBoard = true;\n\n    function setBoardComplete() {\n        playerCreatingBoard = false;\n    }\n\n    function getBoardComplete() {\n        return playerCreatingBoard;\n    }\n\n    const playerVsBot = {};\n\n    const playerVsPlayer = {};\n\n    return {\n        setBoardComplete,\n        getBoardComplete,\n        playerVsBot,\n        playerVsPlayer,\n    };\n})();\n\n/**\n * let them choose if its against a bot or a player\n *\n * if a bot {\n *\n * playerInit(true);\n * playerInit(false);\n *\n * }\n */\n\n/**\n * player boards should return something, so that you will know when\n * the game can start\n *\n */\n\n\n//# sourceURL=webpack://my-webpack-template/./src/gameFlow.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _style_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./style.css */ \"./src/style.css\");\n/* harmony import */ var _DOM_gameStateDOM__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DOM/gameStateDOM */ \"./src/DOM/gameStateDOM.js\");\n/* harmony import */ var _DOM_playerBoard_playerGameBoardDOM__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DOM/playerBoard/playerGameBoardDOM */ \"./src/DOM/playerBoard/playerGameBoardDOM.js\");\n\n\n\n\n// gameStates.gameStart();\n// const myAi = playerModule(false);\n\n// gameBoardDOM.init();\nconst myBoard = (0,_DOM_playerBoard_playerGameBoardDOM__WEBPACK_IMPORTED_MODULE_2__.playerGameBoard)();\n\n// myBoard.beforeGame.init();\n\n_DOM_gameStateDOM__WEBPACK_IMPORTED_MODULE_1__.gameStates.gameStart();\n\n// gameStates.vsBotGame();\n// gameStates.vsPlayerGame()s;\n\n\n//# sourceURL=webpack://my-webpack-template/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;